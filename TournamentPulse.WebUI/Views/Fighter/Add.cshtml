@using TournamentPulse.Core.Enums;
@model TournamentPulse.WebUI.Models.Fighter.CreateFighterViewModel

<!DOCTYPE html>
<html>
<head>
    <title>Add New Fighter</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body custom-card-add-fighter">
                        <h2 class="card-title">Add New Fighter(Should be fixed)</h2>

                        @using (Html.BeginForm("Add", "Fighter", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group">
                                <label for="FullName">Full Name:</label>
                                @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", required = "required" })
                                <div class="invalid-feedback">Please enter the fighter's full name.</div>
                            </div>

                            <div class="form-group">
                                <label for="Age">Age:</label>
                                @Html.TextBoxFor(model => model.Age, new { @class = "form-control", required = "required" })
                                <div class="invalid-feedback">Please enter the fighter's age.</div>
                            </div>

                            <div class="form-group">
                                <label for="Weight">Weight:</label>
                                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control", required = "required" })
                                <div class="invalid-feedback">Please enter the fighter's weight.</div>
                            </div>

                            <div class="form-group">
                                <label for="Rank">Rank:</label>
                                @Html.DropDownListFor(model => model.Rank, Enum.GetValues(typeof(BeltColorEnum)).Cast<BeltColorEnum>().Select(item =>
                            new SelectListItem
                            {
                            Text = item.ToString(),
                            Value = item.ToString(),
                            }), new { @class = "form-control", required = "required" })
                                <div class="invalid-feedback">Please select the fighter's rank.</div>
                            </div>


                            <div class="form-group">
                                <label for="Academy">Academy:</label>
                                @Html.TextBoxFor(model => model.Academy, new { @class = "form-control", required = "required" })
                                <div class="invalid-feedback">Please enter the fighter's academy.</div>
                            </div>

                            <button type="submit" class="btn btn-primary">Create</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
